{"openapi":"3.0.3","info":{"title":"Eth Beacon Node API","description":"API specification for the beacon node, which enables users to query and participate in Ethereum 2.0 phase 0 beacon chain.\n\nAll requests by default send and receive JSON, and as such should have either or both of the \"Content-Type: application/json\"\nand \"Accept: application/json\" headers.  In addition, some requests can return data in the SSZ format.  To indicate that SSZ\ndata is required in response to a request the header \"Accept: application/octet-stream\" should be sent.  Note that only a subset\nof requests can respond with data in SSZ format; these are noted in each individual request.\n\nAPI endpoints are individually versioned.  As such, there is no direct relationship between all v1 endpoints, all v2 endpoints,\n_etc._ and no such relationship should be inferred.  All JSON responses return the requested data under a `data` key in the top\nlevel of their response.  Additional metadata may or may not be present in other keys at the top level of the response, dependent\non the endpoint.  The rules that require an increase in version number are as follows:\n\n  - no field that is listed in an endpoint shall be removed without an increase in the version number\n  - no field that is listed in an endpoint shall be altered in terms of format (_e.g._ from a string to an array) without an\n    increase in the version number\n\nNote that it is possible for a field to be added to an endpoint's data or metadata without an increase in the version number.\n","version":"v2.3.0 - Eth2Spec v1.1.0","contact":{"name":"Ethereum Github","url":"https://github.com/ethereum/beacon-apis/issues"},"license":{"name":"CC0-1.0","url":"https://creativecommons.org/publicdomain/zero/1.0/"}},"servers":[{"url":"{server_url}","variables":{"server_url":{"description":"Beacon node API url","default":"http://public-mainnet-node.ethereum.org/"}}}],"tags":[{"name":"Beacon","description":"Set of endpoints to query beacon chain."},{"name":"Config","description":"Endpoints to query chain configuration, specification, and fork schedules."},{"name":"Debug","description":"Set of endpoints to debug chain and shouldn't be exposed publicly."},{"name":"Events","description":"Set of endpoints to for event subscription."},{"name":"Node","description":"Endpoints to query node related informations"},{"name":"Validator","description":"Endpoints intended for validator clients"},{"name":"ValidatorRequiredApi","description":"Minimal set of endpoints to enable a working validator implementation.\n\n[Checkout validator flow](./validator-flow.md) to learn how to use this api.\n"}],"paths":{"/eth/v1/beacon/genesis":{"get":{"operationId":"getGenesis","tags":["Beacon","ValidatorRequiredApi"],"summary":"Retrieve details of the chain's genesis.","description":"Retrieve details of the chain's genesis which can be used to identify chain.","responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"type":"object","title":"GetGenesisResponse","properties":{"data":{"type":"object","properties":{"genesis_time":{"allOf":[{"type":"string","example":"1"},{"example":"1590832934"},{"description":"The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."}]},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"genesis_fork_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"}}}}}}}},"404":{"description":"Chain genesis info is not yet known","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Chain genesis info is not yet known"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/root":{"get":{"operationId":"getStateRoot","summary":"Get state SSZ HashTreeRoot","description":"Calculates HashTreeRoot for state with given 'stateId'. If stateId is root, same value will be returned.","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateRootResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"HashTreeRoot of BeaconState object"}]}}}}}}}},"400":{"description":"Invalid state ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}]},"example":{"code":404,"message":"State not found"}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/fork":{"get":{"operationId":"getStateFork","summary":"Get Fork object for requested state","description":"Returns [Fork](https://github.com/ethereum/consensus-specs/blob/v0.11.1/specs/phase0/beacon-chain.md#fork) object for state with given 'stateId'.","tags":["Beacon","ValidatorRequiredApi"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateForkResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}}}}}}},"400":{"description":"Invalid state ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"State not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/finality_checkpoints":{"get":{"operationId":"getStateFinalityCheckpoints","summary":"Get state finality checkpoints","description":"Returns finality checkpoints for state with given 'stateId'.\nIn case finality is not yet achieved, checkpoint should return epoch 0 and ZERO_HASH as root.\n","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateFinalityCheckpointsResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"previous_justified":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"400":{"description":"Invalid state ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"State not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/validators":{"get":{"operationId":"getStateValidators","summary":"Get validators from state","description":"Returns filterable list of validators with their balance, status and index.\n\nInformation will be returned for all indices or public key that match known validators.  If an index or public key does not\nmatch any known validator, no information will be returned but this will not cause an error.  There are no guarantees for the\nreturned data in terms of ordering; both the index and public key are returned for each validator, and can be used to confirm\nfor which inputs a response has been returned.\n","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},{"name":"id","description":"Either hex encoded public key (any bytes48 with 0x prefix) or validator index","in":"query","required":false,"schema":{"type":"array","maxItems":30,"uniqueItems":true,"items":{"description":"Either hex encoded public key (any bytes48 with 0x prefix) or validator index","type":"string"}}},{"name":"status","description":"[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)","in":"query","required":false,"schema":{"type":"array","uniqueItems":true,"items":{"allOf":[{"description":"Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n","enum":["pending_initialized","pending_queued","active_ongoing","active_exiting","active_slashed","exited_unslashed","exited_slashed","withdrawal_possible","withdrawal_done"],"example":"active_ongoing"},{"enum":["active","pending","exited","withdrawal"]}]}}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateValidatorsResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"balance":{"allOf":[{"type":"string","example":"1"},{"description":"Current validator balance in gwei."}]},"status":{"description":"Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n","enum":["pending_initialized","pending_queued","active_ongoing","active_exiting","active_slashed","exited_unslashed","exited_slashed","withdrawal_possible","withdrawal_done"],"example":"active_ongoing"},"validator":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}}}}}}}}},"400":{"description":"Invalid state or validator ID, or status","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"State not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/validators/{validator_id}":{"get":{"operationId":"getStateValidator","summary":"Get validator from state by id","description":"Returns validator specified by state and id or public key along with status and balance.","tags":["Beacon","ValidatorRequiredApi"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},{"name":"validator_id","description":"Either hex encoded public key (any bytes48 with 0x prefix) or validator index","in":"path","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateValidatorResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"balance":{"allOf":[{"type":"string","example":"1"},{"description":"Current validator balance in gwei."}]},"status":{"description":"Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n","enum":["pending_initialized","pending_queued","active_ongoing","active_exiting","active_slashed","exited_unslashed","exited_slashed","withdrawal_possible","withdrawal_done"],"example":"active_ongoing"},"validator":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}}}}}}}},"400":{"description":"Invalid state or validator ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"examples":{"StateNotFound":{"value":{"code":404,"message":"State not found"}},"ValidatorNotFound":{"value":{"code":404,"message":"Validator not found"}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/validator_balances":{"get":{"operationId":"getStateValidatorBalances","summary":"Get validator balances from state","description":"Returns filterable list of validators balances.\n\nBalances will be returned for all indices or public key that match known validators.  If an index or public key does not\nmatch any known validator, no balance will be returned but this will not cause an error.  There are no guarantees for the\nreturned data in terms of ordering; the index and is returned for each balance, and can be used to confirm for which inputs a\nresponse has been returned.\n","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},{"name":"id","description":"Either hex encoded public key (any bytes48 with 0x prefix) or validator index","in":"query","required":false,"schema":{"type":"array","maxItems":30,"uniqueItems":true,"items":{"description":"Either hex encoded public key (any bytes48 with 0x prefix) or validator index","type":"string"}}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateValidatorBalancesResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"balance":{"allOf":[{"type":"string","example":"1"},{"description":"Current validator balance in gwei."}]}}}}}}}}},"400":{"description":"Invalid state or validator ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/committees":{"get":{"operationId":"getEpochCommittees","summary":"Get all committees for a state.","description":"Retrieves the committees for the given state.","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},{"name":"epoch","description":"Fetch committees for the given epoch.  If not present then the committees for the epoch of the state will be obtained.","in":"query","required":false,"allowEmptyValue":false,"schema":{"allOf":[{"type":"string","example":"1"},{"example":""}]}},{"name":"index","description":"Restrict returned values to those matching the supplied committee index.","in":"query","required":false,"schema":{"allOf":[{"type":"string","example":"1"},{"example":""}]}},{"name":"slot","description":"Restrict returned values to those matching the supplied slot.","in":"query","required":false,"schema":{"allOf":[{"type":"string","example":"1"},{"example":""}]}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetEpochCommitteesResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"description":"Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)","type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Committee index at a slot"}]},"slot":{"type":"string","example":"1"},"validators":{"type":"array","description":"List of validator indices assigned to this committee","items":{"type":"string","example":"1"}}}}}}}}}},"400":{"description":"Invalid state ID, index, epoch, slot, or combination thereof","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Slot does not belong in epoch"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}]},"example":{"code":404,"message":"State not found"}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/states/{state_id}/sync_committees":{"get":{"operationId":"getEpochSyncCommittees","summary":"Get sync committees for a state.","description":"Retrieves the sync committees for the given state.","tags":["Beacon"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},{"name":"epoch","description":"Fetch sync committees for the given epoch.  If not present then the sync committees for the epoch of the state will be obtained.","in":"query","required":false,"allowEmptyValue":false,"schema":{"allOf":[{"type":"string","example":"1"},{"example":""}]}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetEpochSyncCommitteesResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"validators":{"allOf":[{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},{"description":"all of the validator indices in the current sync committee"}]},"validator_aggregates":{"type":"array","items":{"allOf":[{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},{"description":"Subcommittee slices of the current sync committee"}]}}}}}}}}},"400":{"description":"Invalid state ID or epoch","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Epoch is outside the sync committee period of the state"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}]},"example":{"code":404,"message":"State not found"}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/headers":{"get":{"operationId":"getBlockHeaders","summary":"Get block headers","description":"Retrieves block headers matching given query. By default it will fetch current head slot blocks.","tags":["Beacon"],"parameters":[{"name":"slot","in":"query","required":false,"schema":{"allOf":[{"type":"string","example":"1"},{"example":""}]}},{"name":"parent_root","in":"query","required":false,"schema":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"example":""}]}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetBlockHeadersResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"canonical":{"type":"boolean"},"header":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/headers/{block_id}":{"get":{"operationId":"getBlockHeader","summary":"Get block header","description":"Retrieves block header for given block id.","tags":["Beacon"],"parameters":[{"name":"block_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetBlockHeaderResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"canonical":{"type":"boolean"},"header":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"404":{"description":"Block not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Block not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/blocks":{"post":{"tags":["Beacon","ValidatorRequiredApi"],"summary":"Publish a signed block.","operationId":"publishBlock","description":"Instructs the beacon node to broadcast a newly signed beacon block to the beacon network,\nto be included in the beacon chain. The beacon node is not required to validate the signed\n`BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been\nsuccessful. The beacon node is expected to integrate the new block into its state, and\ntherefore validate the block internally, however blocks which fail the validation are still\nbroadcast but a different status code is returned (202)\n","parameters":[{"in":"header","schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"},"required":false,"name":"Eth-Consensus-Version","description":"Version of the block being submitted, if using SSZ encoding."}],"requestBody":{"description":"The `SignedBeaconBlock` object composed of `BeaconBlock` object (produced by beacon node) and validator signature.","required":true,"content":{"application/json":{"schema":{"oneOf":[{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload":{"allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions":{"type":"array","items":{"allOf":[{"type":"string","description":"A transaction on the execution (Ethereum 1) network.","example":"0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86","pattern":"^0x[a-fA-F0-9]{0,2147483648}$"}]},"maxItems":1048576}}}]}}}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}]}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."}}}},"responses":{"200":{"description":"The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."},"202":{"description":"The block failed validation, but was successfully broadcast anyway. It was not integrated into the beacon node's database."},"400":{"description":"The `SignedBeaconBlock` object is invalid","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block: missing signature"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/beacon/blinded_blocks":{"post":{"tags":["Beacon","ValidatorRequiredApi"],"summary":"Publish a signed block.","operationId":"publishBlindedBlock","description":"Instructs the beacon node to use the components of the `SignedBlindedBeaconBlock` to construct and publish a \n`SignedBeaconBlock` by swapping out the `transactions_root` for the corresponding full list of `transactions`.\nThe beacon node should broadcast a newly constructed `SignedBeaconBlock` to the beacon network,\nto be included in the beacon chain. The beacon node is not required to validate the signed\n`BeaconBlock`, and a successful response (20X) only indicates that the broadcast has been\nsuccessful. The beacon node is expected to integrate the new block into its state, and\ntherefore validate the block internally, however blocks which fail the validation are still\nbroadcast but a different status code is returned (202). Pre-Bellatrix, this endpoint will accept \na `SignedBeaconBlock`.\n","parameters":[{"in":"header","schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"},"required":false,"name":"Eth-Consensus-Version","description":"Version of the block being submitted, if using SSZ encoding."}],"requestBody":{"description":"The `SignedBlindedBeaconBlock` object composed of `BlindedBeaconBlock` object (produced by beacon node) and validator signature.","required":true,"content":{"application/json":{"schema":{"oneOf":[{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"A variant of the the the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.","properties":{"message":{"description":"A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"description":"A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.","allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}]}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use content type header to indicate that SSZ data is contained in the request body."}}}},"responses":{"200":{"description":"The block was validated successfully and has been broadcast. It has also been integrated into the beacon node's database."},"202":{"description":"The block failed validation, but was successfully broadcast anyway. It was not integrated into the beacon node's database."},"400":{"description":"The `SignedBlindedBeaconBlock` object is invalid","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block: missing signature"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/beacon/blocks/{block_id}":{"get":{"operationId":"getBlock","summary":"Get block","deprecated":true,"description":"Returns the complete `SignedBeaconBlock` for a given block ID.\nDepending on the `Accept` header it can be returned either as JSON or SSZ-serialized bytes.\n","tags":["Beacon"],"parameters":[{"name":"block_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetBlockResponse","type":"object","properties":{"data":{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use Accept header to choose this response type"}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"404":{"description":"Block not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Block not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v2/beacon/blocks/{block_id}":{"get":{"operationId":"getBlockV2","summary":"Get block","description":"Retrieves block details for given block id.\nDepending on `Accept` header it can be returned either as json or as bytes serialized by SSZ\n","tags":["Beacon"],"parameters":[{"name":"block_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Successful response","headers":{"Eth-Consensus-Version":{"description":"Required in response so client can deserialize returned json or ssz data more effectively.","required":true,"schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"}}},"content":{"application/json":{"schema":{"title":"GetBlockV2Response","type":"object","properties":{"version":{"type":"string","enum":["phase0","altair","bellatrix"],"example":"phase0"},"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"oneOf":[{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload":{"allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions":{"type":"array","items":{"allOf":[{"type":"string","description":"A transaction on the execution (Ethereum 1) network.","example":"0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86","pattern":"^0x[a-fA-F0-9]{0,2147483648}$"}]},"maxItems":1048576}}}]}}}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}]}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use Accept header to choose this response type"}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"404":{"description":"Block not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Block not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/blocks/{block_id}/root":{"get":{"operationId":"getBlockRoot","summary":"Get block root","description":"Retrieves hashTreeRoot of BeaconBlock/BeaconBlockHeader","tags":["Beacon"],"parameters":[{"name":"block_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"object","title":"GetBlockRootResponse","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"object","properties":{"root":{"allOf":[{"description":"HashTreeRoot of BeaconBlock/BeaconBlockHeader object"},{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]}}}}}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"404":{"description":"Block not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Block not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/blocks/{block_id}/attestations":{"get":{"operationId":"getBlockAttestations","summary":"Get block attestations","description":"Retrieves attestation included in requested block.","tags":["Beacon"],"parameters":[{"name":"block_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetBlockAttestationsResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}}}},"400":{"description":"The block ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid block ID: current"}}]}}}},"404":{"description":"Block not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Block not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/pool/attestations":{"get":{"operationId":"getPoolAttestations","summary":"Get Attestations from operations pool","description":"Retrieves attestations known by the node but not necessarily incorporated into any block","parameters":[{"name":"slot","in":"query","required":false,"schema":{"type":"string","example":"1"}},{"name":"committee_index","in":"query","required":false,"schema":{"type":"string","example":"1"}}],"tags":["Beacon"],"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"title":"GetPoolAttestationsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}}}},"400":{"description":"The slot or committee index could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid slot: current"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}},"post":{"operationId":"submitPoolAttestations","summary":"Submit Attestation objects to node","description":"Submits Attestation objects to the node.  Each attestation in the request body is processed individually.\n\nIf an attestation is validated successfully the node MUST publish that attestation on the appropriate subnet.\n\nIf one or more attestations fail validation the node MUST return a 400 error with details of which attestations have failed, and why.\n","tags":["Beacon","ValidatorRequiredApi"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}},"responses":{"200":{"description":"Attestations are stored in pool and broadcast on appropriate subnet"},"400":{"description":"Errors with one or more attestations","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string","example":"some failures"},"failures":{"description":"List of individual items that have failed","type":"array","items":{"type":"object","properties":{"index":{"description":"Index of item in the request list that caused the error","type":"number","example":3},"message":{"description":"Message describing error","type":"string","example":"invalid signature"}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/pool/attester_slashings":{"get":{"operationId":"getPoolAttesterSlashings","summary":"Get AttesterSlashings from operations pool","description":"Retrieves attester slashings known by the node but not necessarily incorporated into any block","tags":["Beacon"],"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"title":"GetPoolAttesterSlashingsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}},"post":{"operationId":"submitPoolAttesterSlashings","summary":"Submit AttesterSlashing object to node's pool","description":"Submits AttesterSlashing object to node's pool and if passes validation node MUST broadcast it to network.","tags":["Beacon"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}}},"responses":{"200":{"description":"Success"},"400":{"description":"Invalid attester slashing","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid attester slashing, it will never pass validation so it's rejected"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/pool/proposer_slashings":{"get":{"operationId":"getPoolProposerSlashings","summary":"Get ProposerSlashings from operations pool","description":"Retrieves proposer slashings known by the node but not necessarily incorporated into any block","tags":["Beacon"],"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"title":"GetPoolProposerSlashingsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}},"post":{"operationId":"submitPoolProposerSlashings","summary":"Submit ProposerSlashing object to node's pool","description":"Submits ProposerSlashing object to node's pool and if passes validation  node MUST broadcast it to network.","tags":["Beacon"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}},"responses":{"200":{"description":"Success"},"400":{"description":"Invalid proposer slashing","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid proposer slashing, it will never pass validation so it's rejected"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/pool/sync_committees":{"post":{"operationId":"submitPoolSyncCommitteeSignatures","summary":"Submit sync committee signatures to node","description":"Submits sync committee signature objects to the node.\n\nSync committee signatures are not present in phase0, but are required for Altair networks.\n\nIf a sync committee signature is validated successfully the node MUST publish that sync committee signature on all applicable subnets.\n\nIf one or more sync committee signatures fail validation the node MUST return a 400 error with details of which sync committee signatures have failed, and why.\n","tags":["Beacon","ValidatorRequiredApi"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"slot":{"type":"string","example":"1"},"beacon_block_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"validator_index":{"type":"string","example":"1"},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}},"responses":{"200":{"description":"Sync committee signatures are stored in pool and broadcast on appropriate subnet"},"400":{"description":"Errors with one or more sync committee signatures","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string","example":"some failures"},"failures":{"description":"List of individual items that have failed","type":"array","items":{"type":"object","properties":{"index":{"description":"Index of item in the request list that caused the error","type":"number","example":3},"message":{"description":"Message describing error","type":"string","example":"invalid signature"}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/beacon/pool/voluntary_exits":{"get":{"operationId":"getPoolVoluntaryExits","summary":"Get SignedVoluntaryExit from operations pool","description":"Retrieves voluntary exits known by the node but not necessarily incorporated into any block","tags":["Beacon"],"responses":{"200":{"description":"Successful response","content":{"application/json":{"schema":{"title":"GetPoolVoluntaryExitsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}},"post":{"operationId":"submitPoolVoluntaryExit","summary":"Submit SignedVoluntaryExit object to node's pool","description":"Submits SignedVoluntaryExit object to node's pool and if passes validation node MUST broadcast it to network.","tags":["Beacon"],"requestBody":{"required":true,"content":{"application/json":{"schema":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"responses":{"200":{"description":"Voluntary exit is stored in node and broadcasted to network"},"400":{"description":"Invalid voluntary exit","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid voluntary exit, it will never pass validation so it's rejected"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/debug/beacon/states/{state_id}":{"get":{"operationId":"getState","summary":"Get full BeaconState object","deprecated":true,"description":"Returns full BeaconState object for given stateId.\nDepending on `Accept` header it can be returned either as json or as bytes serialized by SSZ\n","tags":["Debug"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetStateResponse","type":"object","properties":{"data":{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"current_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized state bytes. Use Accept header to choose this response type"}}}},"400":{"description":"Invalid state ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"State not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v2/debug/beacon/states/{state_id}":{"get":{"operationId":"getStateV2","summary":"Get full BeaconState object","description":"Returns full BeaconState object for given stateId.\nDepending on `Accept` header it can be returned either as json or as bytes serialized by SSZ\n","tags":["Debug"],"parameters":[{"name":"state_id","in":"path","required":true,"example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"}],"responses":{"200":{"description":"Success","headers":{"Eth-Consensus-Version":{"description":"Required in response so client can deserialize returned json or ssz data more effectively.","required":true,"schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"}}},"content":{"application/json":{"schema":{"title":"GetStateV2Response","type":"object","properties":{"version":{"type":"string","enum":["phase0","altair","bellatrix"],"example":"phase0"},"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"oneOf":[{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"current_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconstate) object from the CL Altair spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"current_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"inactivity_scores":{"description":"Per-validator inactivity scores. New in Altair","type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"current_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"next_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}}}},{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconstate) object from the Eth2.0 Bellatrix spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"current_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"inactivity_scores":{"description":"Per-validator inactivity scores. New in Altair","type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"current_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"next_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"latest_execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}}]}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized state bytes. Use Accept header to choose this response type"}}}},"400":{"description":"Invalid state ID","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid state ID: current"}}]}}}},"404":{"description":"State not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"State not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/debug/beacon/heads":{"get":{"operationId":"getDebugChainHeads","summary":"Get fork choice leaves","description":"Retrieves all possible chain heads (leaves of fork choice tree).","deprecated":true,"tags":["Debug"],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetDebugChainHeadsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v2/debug/beacon/heads":{"get":{"operationId":"getDebugChainHeadsV2","summary":"Get fork choice leaves","description":"Retrieves all possible chain heads (leaves of fork choice tree).","tags":["Debug"],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetDebugChainHeadsResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/identity":{"get":{"operationId":"getNetworkIdentity","tags":["Node"],"summary":"Get node network identity","description":"Retrieves data about the node's network presence","responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetNetworkIdentityResponse","type":"object","properties":{"data":{"type":"object","properties":{"peer_id":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"enr":{"type":"string","description":"Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)","example":"enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"},"p2p_addresses":{"type":"array","items":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"}]}},"discovery_addresses":{"type":"array","items":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"},{"example":"/ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"}]}},"metadata":{"type":"object","description":"Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/p2p-interface.md#metadata)","properties":{"seq_number":{"allOf":[{"description":"Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."},{"type":"string","example":"1"}]},"attnets":{"allOf":[{"description":"Bitvector representing the node's persistent attestation subnet subscriptions."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x0000000000000000"}]},"syncnets":{"allOf":[{"description":"Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x0f"},{"required":false}]}}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/peers":{"get":{"operationId":"getPeers","tags":["Node"],"summary":"Get node network peers","description":"Retrieves data about the node's network peers. By default this returns all peers. Multiple query params are combined using AND conditions","parameters":[{"name":"state","in":"query","required":false,"schema":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["disconnected","connecting","connected","disconnecting"]}}},{"name":"direction","in":"query","required":false,"schema":{"type":"array","uniqueItems":true,"items":{"type":"string","enum":["inbound","outbound"]}}}],"responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetPeersResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","properties":{"peer_id":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"enr":{"allOf":[{"type":"string","description":"Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)","example":"enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"},{"nullable":true}]},"last_seen_p2p_address":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Multiaddrs used in last peer connection."}]},"state":{"type":"string","enum":["disconnected","connecting","connected","disconnecting"]},"direction":{"type":"string","enum":["inbound","outbound"]}}}},"meta":{"type":"object","properties":{"count":{"description":"Total number of items","type":"number","example":1}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/peers/{peer_id}":{"get":{"operationId":"getPeer","tags":["Node"],"summary":"Get peer","description":"Retrieves data about the given peer","parameters":[{"name":"peer_id","in":"path","required":true,"schema":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"}}],"responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetPeerResponse","type":"object","properties":{"data":{"type":"object","properties":{"peer_id":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"enr":{"allOf":[{"type":"string","description":"Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)","example":"enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"},{"nullable":true}]},"last_seen_p2p_address":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Multiaddrs used in last peer connection."}]},"state":{"type":"string","enum":["disconnected","connecting","connected","disconnecting"]},"direction":{"type":"string","enum":["inbound","outbound"]}}}}}}}},"400":{"description":"The peer ID supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid peer ID: localhost"}}]}}}},"404":{"description":"Peer not found","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":404,"message":"Peer not found"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/peer_count":{"get":{"operationId":"getPeerCount","tags":["Node"],"summary":"Get peer count","description":"Retrieves number of known peers.","responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetPeerCountResponse","type":"object","properties":{"data":{"type":"object","properties":{"disconnected":{"allOf":[{"type":"string","example":"1"},{"example":"12"}]},"connecting":{"allOf":[{"type":"string","example":"1"},{"example":"34"}]},"connected":{"allOf":[{"type":"string","example":"1"},{"example":"56"}]},"disconnecting":{"allOf":[{"type":"string","example":"1"},{"example":"5"}]}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/version":{"get":{"operationId":"getNodeVersion","tags":["Node"],"summary":"Get version string of the running beacon node.","description":"Requests that the beacon node identify information about its implementation in a format similar to a  [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3) field.","responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetVersionResponse","type":"object","properties":{"data":{"type":"object","properties":{"version":{"type":"string","description":"A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).","example":"Lighthouse/v0.1.5 (Linux x86_64)"}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/syncing":{"get":{"operationId":"getSyncingStatus","tags":["Node","ValidatorRequiredApi"],"summary":"Get node syncing status","description":"Requests the beacon node to describe if it's currently syncing or not, and if it is, what block it is up to.","responses":{"200":{"description":"Request successful","content":{"application/json":{"schema":{"title":"GetSyncingStatusResponse","type":"object","properties":{"data":{"type":"object","properties":{"head_slot":{"allOf":[{"description":"Head slot node is trying to reach"},{"type":"string","example":"1"}]},"sync_distance":{"allOf":[{"description":"How many slots node needs to process to reach head. 0 if synced."},{"type":"string","example":"1"}]},"is_syncing":{"allOf":[{"type":"boolean"},{"description":"Set to true if the node is syncing, false if the node is synced."}]},"is_optimistic":{"allOf":[{"type":"boolean"},{"description":"Set to true if the node is optimistically tracking head."}]}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/node/health":{"get":{"operationId":"getHealth","tags":["Node"],"summary":"Get health check","description":"Returns node health status in http status codes. Useful for load balancers.","responses":{"200":{"description":"Node is ready"},"206":{"description":"Node is syncing but can serve incomplete data"},"503":{"description":"Node not initialized or having issues"}}}},"/eth/v1/config/fork_schedule":{"get":{"operationId":"getForkSchedule","summary":"Get scheduled upcoming forks.","description":"Retrieve all forks, past present and future, of which this node is aware.","tags":["Config"],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetForkScheduleResponse","type":"object","properties":{"data":{"type":"array","items":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/config/spec":{"get":{"operationId":"getSpec","summary":"Get spec params.","description":"Retrieve specification configuration used on this node.  The configuration should include:\n  - Constants for all hard forks known by the beacon node, for example the [phase 0](https://github.com/ethereum/consensus-specs/blob/dev/specs/phase0/beacon-chain.md#constants) and [altair](https://github.com/ethereum/consensus-specs/blob/dev/specs/altair/beacon-chain.md#constants) values\n  - Presets for all hard forks supplied to the beacon node, for example the [phase 0](https://github.com/ethereum/consensus-specs/blob/dev/presets/mainnet/phase0.yaml) and [altair](https://github.com/ethereum/consensus-specs/blob/dev/presets/mainnet/altair.yaml) values\n  - Configuration for the beacon node, for example the [mainnet](https://github.com/ethereum/consensus-specs/blob/dev/configs/mainnet.yaml) values\n\nValues are returned with following format:\n  - any value starting with 0x in the spec is returned as a hex string\n  - numeric values are returned as a quoted integer\n","tags":["Config","ValidatorRequiredApi"],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetSpecResponse","type":"object","properties":{"data":{"description":"Key value mapping of all constants, presets and configuration values for all known hard forks\nValues are returned with following format:\n  - any value starting with 0x in the spec is returned as a hex string\n  - numeric values are returned as a quoted integer\n","type":"object"}},"example":{"DEPOSIT_CONTRACT_ADDRESS":"0x00000000219ab540356cBB839Cbe05303d7705Fa","DEPOSIT_NETWORK_ID":"1","DOMAIN_AGGREGATE_AND_PROOF":"0x06000000","INACTIVITY_PENALTY_QUOTIENT":"67108864","INACTIVITY_PENALTY_QUOTIENT_ALTAIR":"50331648"}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/config/deposit_contract":{"get":{"operationId":"getDepositContract","summary":"Get deposit contract address.","description":"Retrieve Eth1 deposit contract address and chain ID.","tags":["Config"],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"title":"GetDepositContractResponse","type":"object","properties":{"data":{"type":"object","properties":{"chain_id":{"allOf":[{"type":"string","example":"1"},{"description":"Id of Eth1 chain on which contract is deployed."},{"example":"1"}]},"address":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"description":"Hex encoded deposit contract address with 0x prefix"},{"example":"0x1Db3439a222C519ab44bb1144fC28167b4Fa6EE6"}]}}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/duties/attester/{epoch}":{"post":{"tags":["ValidatorRequiredApi","Validator"],"summary":"Get attester duties","operationId":"getAttesterDuties","description":"Requests the beacon node to provide a set of attestation duties, which should be performed by validators, for a particular epoch.\nDuties should only need to be checked once per epoch, however a chain reorganization (of > MIN_SEED_LOOKAHEAD epochs) could occur, resulting in a change of duties. For full safety, you should monitor head events and confirm the dependent root in this response matches:\n- event.previous_duty_dependent_root when `compute_epoch_at_slot(event.slot) == epoch`\n- event.current_duty_dependent_root when `compute_epoch_at_slot(event.slot) + 1 == epoch`\n- event.block otherwise\n\nThe dependent_root value is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch - 1) - 1)` or the genesis block root in the case of underflow.","parameters":[{"name":"epoch","description":"Should only be allowed 1 epoch ahead","in":"path","required":true,"schema":{"type":"string","example":"1"}}],"requestBody":{"description":"An array of the validator indices for which to obtain the duties.","required":true,"content":{"application/json":{"schema":{"title":"GetAttesterDutiesBody","type":"array","items":{"type":"string","example":"1","minItems":1}}}}},"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"GetAttesterDutiesResponse","type":"object","properties":{"dependent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The block root that this response is dependent on."}]},"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry"}]},"committee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The committee index"}]},"committee_length":{"allOf":[{"type":"string","example":"1"},{"description":"Number of validators in committee"}]},"committees_at_slot":{"allOf":[{"type":"string","example":"1"},{"description":"Number of committees at the provided slot"}]},"validator_committee_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in committee"}]},"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator must attest."}]}}}}}}}}},"400":{"description":"Invalid epoch or index","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid epoch: -2"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/duties/proposer/{epoch}":{"get":{"tags":["ValidatorRequiredApi","Validator"],"summary":"Get block proposers duties","operationId":"getProposerDuties","description":"Request beacon node to provide all validators that are scheduled to propose a block in the given epoch.\nDuties should only need to be checked once per epoch, however a chain reorganization could occur that results in a change of duties. For full safety, you should monitor head events and confirm the dependent root in this response matches:\n- event.current_duty_dependent_root when `compute_epoch_at_slot(event.slot) == epoch`\n- event.block otherwise\n\nThe dependent_root value is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch) - 1)` or the genesis block root in the case of underflow.","parameters":[{"name":"epoch","in":"path","required":true,"schema":{"type":"string","example":"1"}}],"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"GetProposerDutiesResponse","type":"object","properties":{"dependent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The block root that this response is dependent on."}]},"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator must propose block."}]}}}}}}}}},"400":{"description":"Invalid epoch","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid epoch: -2"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/duties/sync/{epoch}":{"post":{"tags":["ValidatorRequiredApi","Validator"],"summary":"Get sync committee duties","operationId":"getSyncCommitteeDuties","description":"Requests the beacon node to provide a set of sync committee duties for a particular epoch.","parameters":[{"name":"epoch","description":"epoch // EPOCHS_PER_SYNC_COMMITTEE_PERIOD <= current_epoch // EPOCHS_PER_SYNC_COMMITTEE_PERIOD + 1","in":"path","required":true,"schema":{"type":"string","example":"1"}}],"requestBody":{"description":"An array of the validator indices for which to obtain the duties.","required":true,"content":{"application/json":{"schema":{"title":"GetSyncCommitteeDutiesBody","type":"array","items":{"type":"string","example":"1","minItems":1}}}}},"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"GetSyncCommitteeDutiesResponse","type":"object","properties":{"execution_optimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"data":{"type":"array","items":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"validator_sync_committee_indices":{"type":"array","description":"The indices of the validator in the sync committee.","minItems":1,"items":{"type":"string","example":"1"}}}}}}}}}},"400":{"description":"Invalid epoch or index","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid epoch: -2"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/blocks/{slot}":{"get":{"tags":["ValidatorRequiredApi","Validator"],"operationId":"produceBlock","deprecated":true,"summary":"Produce a new block, without signature.","description":"Requests a beacon node to produce a valid block, which can then be signed by a validator.\n\n__NOTE__: Supports only phase0 blocks.\n","parameters":[{"name":"slot","in":"path","required":true,"description":"The slot for which the block should be proposed.","schema":{"type":"string","example":"1"}},{"name":"randao_reveal","in":"query","required":true,"description":"The validator's randao reveal value.","schema":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}},{"name":"graffiti","in":"query","required":false,"description":"Arbitrary data validator wants to include in block.","schema":{"type":"string","format":"hex","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}],"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"ProduceBlockResponse","type":"object","properties":{"data":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]}}}}}},"400":{"description":"Invalid block production request","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"examples":{"InvalidRequest":{"value":{"code":400,"message":"Invalid request to produce a block"}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v2/validator/blocks/{slot}":{"get":{"tags":["ValidatorRequiredApi","Validator"],"operationId":"produceBlockV2","summary":"Produce a new block, without signature.","description":"Requests a beacon node to produce a valid block, which can then be signed by a validator.\n\nMetadata in the response indicates the type of block produced, and the supported types of block\nwill be added to as forks progress.\n","parameters":[{"name":"slot","in":"path","required":true,"description":"The slot for which the block should be proposed.","schema":{"type":"string","example":"1"}},{"name":"randao_reveal","in":"query","required":true,"description":"The validator's randao reveal value.","schema":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}},{"name":"graffiti","in":"query","required":false,"description":"Arbitrary data validator wants to include in block.","schema":{"type":"string","format":"hex","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}],"responses":{"200":{"description":"Success response","headers":{"Eth-Consensus-Version":{"description":"Required in response so client can deserialize returned json or ssz data more effectively.","required":true,"schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"}}},"content":{"application/json":{"schema":{"title":"ProduceBlockV2Response","type":"object","properties":{"version":{"type":"string","enum":["phase0","altair","bellatrix"],"example":"phase0"},"data":{"oneOf":[{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload":{"allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions":{"type":"array","items":{"allOf":[{"type":"string","description":"A transaction on the execution (Ethereum 1) network.","example":"0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86","pattern":"^0x[a-fA-F0-9]{0,2147483648}$"}]},"maxItems":1048576}}}]}}}]}}}]}]}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version`."}}}},"400":{"description":"Invalid block production request","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"examples":{"InvalidRequest":{"value":{"code":400,"message":"Invalid request to produce a block"}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/blinded_blocks/{slot}":{"get":{"tags":["ValidatorRequiredApi","Validator"],"operationId":"produceBlindedBlock","summary":"Produce a new blinded block, without signature.","description":"Requests a beacon node to produce a valid blinded block, which can then be signed by a validator. \nA blinded block is a block with only a transactions root, rather than a full transactions list.\n\nMetadata in the response indicates the type of block produced, and the supported types of block\nwill be added to as forks progress.\n\nPre-Bellatrix, this endpoint will return a `BeaconBlock`.\n","parameters":[{"name":"slot","in":"path","required":true,"description":"The slot for which the block should be proposed.","schema":{"type":"string","example":"1"}},{"name":"randao_reveal","in":"query","required":true,"description":"The validator's randao reveal value.","schema":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}},{"name":"graffiti","in":"query","required":false,"description":"Arbitrary data validator wants to include in block.","schema":{"type":"string","format":"hex","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}],"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"ProduceBlindedBlockResponse","type":"object","properties":{"version":{"type":"string","enum":["phase0","altair","bellatrix"],"example":"bellatrix"},"data":{"oneOf":[{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},{"description":"A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"description":"A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.","allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}}]}}}]}]}}}},"application/octet-stream":{"schema":{"description":"SSZ serialized block bytes. Use Accept header to choose this response type, version string is sent in header `Eth-Consensus-Version`."}}}},"400":{"description":"Invalid block production request","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"examples":{"InvalidRequest":{"value":{"code":400,"message":"Invalid request to produce a block"}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/attestation_data":{"get":{"tags":["ValidatorRequiredApi","Validator"],"operationId":"produceAttestationData","summary":"Produce an attestation data","description":"Requests that the beacon node produce an AttestationData.","parameters":[{"name":"slot","in":"query","required":true,"description":"The slot for which an attestation data should be created.","schema":{"type":"string","example":"1"}},{"name":"committee_index","in":"query","description":"The committee index for which an attestation data should be created.","required":true,"schema":{"type":"string","example":"1"}}],"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"ProduceAttestationDataResponse","type":"object","properties":{"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/aggregate_attestation":{"get":{"operationId":"getAggregatedAttestation","summary":"Get aggregated attestation","description":"Aggregates all attestations matching given attestation data root and slot","tags":["ValidatorRequiredApi","Validator"],"parameters":[{"name":"attestation_data_root","in":"query","required":true,"description":"HashTreeRoot of AttestationData that validator wants aggregated","schema":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}},{"name":"slot","in":"query","required":true,"schema":{"type":"string","example":"1"}}],"responses":{"200":{"description":"Returns aggregated `Attestation` object with same `AttestationData` root.","content":{"application/json":{"schema":{"title":"GetAggregatedAttestationResponse","type":"object","properties":{"data":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}}}},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"404":{"description":"Not found","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":404,"message":"Requested item not found"}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/aggregate_and_proofs":{"post":{"operationId":"publishAggregateAndProofs","summary":"Publish multiple aggregate and proofs","description":"Verifies given aggregate and proofs and publishes them on appropriate gossipsub topic.","tags":["ValidatorRequiredApi","Validator"],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"description":"The [`SignedAggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/validator.md#signedaggregateandproof) object","properties":{"message":{"allOf":[{"type":"object","description":"The [`AggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/validator.md#aggregateandproof) without selection_proof","properties":{"aggregator_index":{"type":"string","example":"1"},"aggregate":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}},{"type":"object","properties":{"selection_proof":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}},"responses":{"200":{"description":"Successful response"},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/beacon_committee_subscriptions":{"post":{"operationId":"prepareBeaconCommitteeSubnet","summary":"Signal beacon node to prepare for a committee subnet","description":"After beacon node receives this request,\nsearch using discv5 for peers related to this subnet\nand replace current peers with those ones if necessary\nIf validator `is_aggregator`, beacon node must:\n- announce subnet topic subscription on gossipsub\n- aggregate attestations received on that subnet\n","tags":["ValidatorRequiredApi","Validator"],"requestBody":{"content":{"application/json":{"schema":{"title":"SubscribeToBeaconCommitteeSubnetRequestBody","type":"array","items":{"type":"object","properties":{"validator_index":{"type":"string","example":"1"},"committee_index":{"type":"string","example":"1"},"committees_at_slot":{"allOf":[{"type":"string","example":"1"},{"description":"Number of committees at the returned slot"}]},"slot":{"allOf":[{"type":"string","example":"1"},{"description":"Should be slot at which validator is assigned to attest"}]},"is_aggregator":{"type":"boolean","description":"Signals to BN that a validator on the VC has been chosen for aggregator role."}}}}}}},"responses":{"200":{"description":"Slot signature is valid and beacon node has prepared the attestation subnet.\n\nNote that we cannot be certain the Beacon node will find peers for that subnet for various reasons.\n"},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/sync_committee_subscriptions":{"post":{"operationId":"prepareSyncCommitteeSubnets","summary":"Subscribe to sync committee subnets","description":"Subscribe to a number of sync committee subnets\n\nSync committees are not present in phase0, but are required for Altair networks.\n\nSubscribing to sync committee subnets is an action performed by VC to enable network participation in Altair networks, and only required if the VC has an active validator in an active sync committee.\n","tags":["ValidatorRequiredApi","Validator"],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"validator_index":{"type":"string","example":"1"},"sync_committee_indices":{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},"until_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"The final epoch (exclusive value) that the specified validator requires the subscription for."}]}}}}}}},"responses":{"200":{"description":"Successful response"},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/sync_committee_contribution":{"get":{"tags":["ValidatorRequiredApi","Validator"],"operationId":"produceSyncCommitteeContribution","summary":"Produce a sync committee contribution","description":"Requests that the beacon node produce a sync committee contribution.","parameters":[{"name":"slot","in":"query","required":true,"description":"The slot for which a sync committee contribution should be created.","schema":{"type":"string","example":"1"}},{"name":"subcommittee_index","in":"query","description":"the subcommittee index for which to produce the contribution.","required":true,"schema":{"type":"string","example":"1"}},{"name":"beacon_block_root","in":"query","description":"the block root for which to produce the contribution.","required":true,"schema":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}],"responses":{"200":{"description":"Success response","content":{"application/json":{"schema":{"title":"produceSyncCommitteeContributionResponse","type":"object","properties":{"data":{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator is providing a sync committee contribution."}]},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Block root for this contribution."}]},"subcommittee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The index of the subcommittee that the contribution pertains to."}]},"aggregation_bits":{"allOf":[{"description":"A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x01"}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Signature by the validator(s) over the block root of `slot`"}]}}}}}}}},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"404":{"description":"Not found","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":404,"message":"Requested item not found"}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"503":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}}}},"/eth/v1/validator/contribution_and_proofs":{"post":{"operationId":"publishContributionAndProofs","summary":"Publish multiple contribution and proofs","description":"Publish multiple signed sync committee contribution and proofs","tags":["ValidatorRequiredApi","Validator"],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"message":{"type":"object","properties":{"aggregator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"selection_proof":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},"contribution":{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator is providing a sync committee contribution."}]},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Block root for this contribution."}]},"subcommittee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The index of the subcommittee that the contribution pertains to."}]},"aggregation_bits":{"allOf":[{"description":"A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x01"}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Signature by the validator(s) over the block root of `slot`"}]}}}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}},"responses":{"200":{"description":"Successful response"},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/prepare_beacon_proposer":{"post":{"operationId":"prepareBeaconProposer","summary":"Provide beacon node with proposals for the given validators.","description":"Prepares the beacon node for potential proposers by supplying information\nrequired when proposing blocks for the given validators.  The information\nsupplied for each validator index will persist through the epoch in which\nthe call is submitted and for a further two epochs after that, or until the\nbeacon node restarts.  It is expected that validator clients will send this\ninformation periodically, for example each epoch, to ensure beacon nodes have\ncorrect and timely fee recipient information.\n\nNote that there is no guarantee that the beacon node will use the supplied fee\nrecipient when creating a block proposal, so on receipt of a proposed block the\nvalidator should confirm that it finds the fee recipient within the block\nacceptable before signing it.\n\nAlso note that requests containing currently inactive or unknown validator\nindices will be accepted, as they may become active at a later epoch.\n","tags":["ValidatorRequiredApi","Validator"],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","properties":{"validator_index":{"type":"string","example":"1"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"}}}}}}},"responses":{"200":{"description":"Preparation information has been received.\n"},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/validator/register_validator":{"post":{"operationId":"registerValidator","summary":"Provide beacon node with registrations for the given validators to the external builder network.","description":"Prepares the beacon node for engaging with external builders. The\ninformation will be sent by the beacon node to the builder network. It is\nexpected that the validator client will send this information periodically\nto ensure the beacon node has correct and timely registration information\nto provide to builders. The validator client should not sign blinded beacon\nblocks that do not adhere to their latest fee recipient and gas limit\npreferences.\n\nNote that requests containing currently inactive or unknown validator\npubkeys will be accepted, as they may become active at a later epoch.\n","tags":["Validator"],"requestBody":{"content":{"application/json":{"schema":{"type":"array","items":{"type":"object","description":"The `SignedValidatorRegistration` object from the Builder API specification.","properties":{"message":{"type":"object","description":"The `ValidatorRegistration` object from the Builder API specification.","properties":{"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"gas_limit":{"type":"string","example":"1","description":"Preferred gas limit of validator."},"timestamp":{"type":"string","example":"1","description":"Unix timestamp of registration."},"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}},"responses":{"200":{"description":"Registration information has been received."},"400":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}},"/eth/v1/events":{"get":{"operationId":"eventstream","summary":"Subscribe to beacon node events","tags":["Events","ValidatorRequiredApi"],"description":"Provides endpoint to subscribe to beacon node Server-Sent-Events stream.\nConsumers should use [eventsource](https://html.spec.whatwg.org/multipage/server-sent-events.html#the-eventsource-interface)\nimplementation to listen on those events.\n\nServers _may_ send SSE comments beginning with `:` for any purpose, including to keep the\nevent stream connection alive in the presence of proxy servers.\n","parameters":[{"name":"topics","in":"query","required":true,"description":"Event types to subscribe to","schema":{"type":"array","items":{"type":"string","uniqueItems":true,"enum":["head","block","attestation","voluntary_exit","finalized_checkpoint","chain_reorg","contribution_and_proof"]}}}],"responses":{"200":{"description":"Opened SSE stream.","content":{"text/event-stream":{"schema":{"type":"string","description":"https://developer.mozilla.org/en-US/docs/Web/API/Server-sent_events/Using_server-sent_events#Event_stream_format"},"examples":{"head":{"description":"The node has finished processing, resulting in a new head. previous_duty_dependent_root is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch - 1) - 1)` and current_duty_dependent_root is `get_block_root_at_slot(state, compute_start_slot_at_epoch(epoch) - 1)`. Both dependent roots use the genesis block root in the case of underflow.","value":"event: head\ndata: {\"slot\":\"10\", \"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch_transition\":false, \"previous_duty_dependent_root\":\"0x5e0043f107cb57913498fbf2f99ff55e730bf1e151f02f221e977c91a90a0e91\", \"current_duty_dependent_root\":\"0x5e0043f107cb57913498fbf2f99ff55e730bf1e151f02f221e977c91a90a0e91\", \"execution_optimistic\": false}\n"},"block":{"description":"The node has received a valid block (from P2P or API)","value":"event: block\ndata: {\"slot\":\"10\", \"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"execution_optimistic\": false}\n"},"attestation":{"description":"The node has received a valid attestation (from P2P or API)","value":"event: attestation\ndata: {\"aggregation_bits\":\"0x01\", \"signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\", \"data\":{\"slot\":\"1\", \"index\":\"1\", \"beacon_block_root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\", \"source\":{\"epoch\":\"1\", \"root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}, \"target\":{\"epoch\":\"1\", \"root\":\"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2\"}}}\n"},"voluntary_exit":{"description":"The node has received a valid voluntary exit (from P2P or API)","value":"event: voluntary_exit\ndata: {\"message\":{\"epoch\":\"1\", \"validator_index\":\"1\"}, \"signature\":\"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505\"}\n"},"finalized_checkpoint":{"description":"Finalized checkpoint has been updated","value":"event: finalized_checkpoint\ndata: {\"block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch\":\"2\", \"execution_optimistic\": false }\n"},"chain_reorg":{"description":"The node has reorganized its chain","value":"event: chain_reorg\ndata: {\"slot\":\"200\", \"depth\":\"50\", \"old_head_block\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"new_head_block\":\"0x76262e91970d375a19bfe8a867288d7b9cde43c8635f598d93d39d041706fc76\", \"old_head_state\":\"0x9a2fefd2fdb57f74993c7780ea5b9030d2897b615b89f808011ca5aebed54eaf\", \"new_head_state\":\"0x600e852a08c1200654ddf11025f1ceacb3c2e74bdd5c630cde0838b2591b69f9\", \"epoch\":\"2\", \"execution_optimistic\": false}\n"},"contribution_and_proof":{"description":"The node has received a valid sync committee SignedContributionAndProof (from P2P or API)","value":"event: contribution_and_proof\ndata: {\"message\": {\"aggregator_index\": \"997\", \"contribution\": {\"slot\": \"168097\", \"beacon_block_root\": \"0x56f1fd4262c08fa81e27621c370e187e621a67fc80fe42340b07519f84b42ea1\", \"subcommittee_index\": \"0\", \"aggregation_bits\": \"0xffffffffffffffffffffffffffffffff\", \"signature\": \"0x85ab9018e14963026476fdf784cc674da144b3dbdb47516185438768774f077d882087b90ad642469902e782a8b43eed0cfc1b862aa9a473b54c98d860424a702297b4b648f3f30bdaae8a8b7627d10d04cb96a2cc8376af3e54a9aa0c8145e3\"}, \"selection_proof\": \"0x87c305f04bfe5db27c2b19fc23e00d7ac496ec7d3e759cbfdd1035cb8cf6caaa17a36a95a08ba78c282725e7b66a76820ca4eb333822bd399ceeb9807a0f2926c67ce67cfe06a0b0006838203b493505a8457eb79913ce1a3bcd1cc8e4ef30ed\"}, \"signature\": \"0xac118511474a94f857300b315c50585c32a713e4452e26a6bb98cdb619936370f126ed3b6bb64469259ee92e69791d9e12d324ce6fd90081680ce72f39d85d50b0ff977260a8667465e613362c6d6e6e745e1f9323ec1d6f16041c4e358839ac\"}\n"}}}}},"400":{"description":"The topics supplied could not be parsed","content":{"application/json":{"schema":{"allOf":[{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},{"example":{"code":400,"message":"Invalid topic: weather_forecast"}}]}}}},"500":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}}}}}},"components":{"schemas":{"BeaconState":{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"current_epoch_attestations":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`PendingAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#pendingattestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"inclusion_delay":{"type":"string","example":"1"},"proposer_index":{"type":"string","example":"1"}}}]}},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"BeaconBlock":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"SignedBeaconBlock":{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblock) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblock) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockbody) object from the CL spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"SignedBeaconBlockHeader":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"ValidatorResponse":{"type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"balance":{"allOf":[{"type":"string","example":"1"},{"description":"Current validator balance in gwei."}]},"status":{"description":"Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n","enum":["pending_initialized","pending_queued","active_ongoing","active_exiting","active_slashed","exited_unslashed","exited_slashed","withdrawal_possible","withdrawal_done"],"example":"active_ongoing"},"validator":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}}},"ValidatorBalanceResponse":{"type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"balance":{"allOf":[{"type":"string","example":"1"},{"description":"Current validator balance in gwei."}]}}},"ValidatorStatus":{"description":"Possible statuses:\n- **pending_initialized** - When the first deposit is processed, but not enough funds are available (or not yet the end of the first epoch) to get validator into the activation queue.\n- **pending_queued** - When validator is waiting to get activated, and have enough funds etc. while in the queue, validator activation epoch keeps changing until it gets to the front and make it through (finalization is a requirement here too).\n- **active_ongoing** - When validator must be attesting, and have not initiated any exit.\n- **active_exiting** - When validator is still active, but filed a voluntary request to exit.\n- **active_slashed** - When validator is still active, but have a slashed status and is scheduled to exit.\n- **exited_unslashed** - When validator has reached reguler exit epoch, not being slashed, and doesn't have to attest any more, but cannot withdraw yet.\n- **exited_slashed** - When validator has reached reguler exit epoch, but was slashed, have to wait for a longer withdrawal period.\n- **withdrawal_possible** - After validator has exited, a while later is permitted to move funds, and is truly out of the system.\n- **withdrawal_done** - (not possible in phase0, except slashing full balance) - actually having moved funds away\n\n[Validator status specification](https://hackmd.io/ofFJ5gOmQpu1jjHilHbdQQ)\n","enum":["pending_initialized","pending_queued","active_ongoing","active_exiting","active_slashed","exited_unslashed","exited_slashed","withdrawal_possible","withdrawal_done"],"example":"active_ongoing"},"Committee":{"description":"Group of validators assigned to attest at specific slot and that have the same committee index (shard in phase 1)","type":"object","properties":{"index":{"allOf":[{"type":"string","example":"1"},{"description":"Committee index at a slot"}]},"slot":{"type":"string","example":"1"},"validators":{"type":"array","description":"List of validator indices assigned to this committee","items":{"type":"string","example":"1"}}}},"AttesterSlashing":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}},"ProposerSlashing":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},"SignedVoluntaryExit":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"AttesterDuty":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry"}]},"committee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The committee index"}]},"committee_length":{"allOf":[{"type":"string","example":"1"},{"description":"Number of validators in committee"}]},"committees_at_slot":{"allOf":[{"type":"string","example":"1"},{"description":"Number of committees at the provided slot"}]},"validator_committee_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in committee"}]},"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator must attest."}]}}},"ProposerDuty":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator must propose block."}]}}},"Altair.SyncDuty":{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"validator_sync_committee_indices":{"type":"array","description":"The indices of the validator in the sync committee.","minItems":1,"items":{"type":"string","example":"1"}}}},"SignedAggregateAndProof":{"description":"The [`SignedAggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/validator.md#signedaggregateandproof) object","properties":{"message":{"allOf":[{"type":"object","description":"The [`AggregateAndProof`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/validator.md#aggregateandproof) without selection_proof","properties":{"aggregator_index":{"type":"string","example":"1"},"aggregate":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}},{"type":"object","properties":{"selection_proof":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"Attestation":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"AttestationData":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}},"Fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"Checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"Uint64":{"type":"string","example":"1"},"NetworkIdentity":{"type":"object","properties":{"peer_id":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"enr":{"type":"string","description":"Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)","example":"enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"},"p2p_addresses":{"type":"array","items":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Node's addresses on which eth2 rpc requests are served. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"}]}},"discovery_addresses":{"type":"array","items":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Node's addresses on which is listening for discv5 requests. [Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)"},{"example":"/ip4/7.7.7.7/udp/30303/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"}]}},"metadata":{"type":"object","description":"Based on eth2 [Metadata object](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/p2p-interface.md#metadata)","properties":{"seq_number":{"allOf":[{"description":"Uint64 starting at 0 used to version the node's metadata. If any other field in the local MetaData changes, the node MUST increment seq_number by 1."},{"type":"string","example":"1"}]},"attnets":{"allOf":[{"description":"Bitvector representing the node's persistent attestation subnet subscriptions."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x0000000000000000"}]},"syncnets":{"allOf":[{"description":"Bitvector representing the node's sync committee subnet subscriptions. This metadata is not present in phase0, but will be present in Altair."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x0f"},{"required":false}]}}}}},"Peer":{"type":"object","properties":{"peer_id":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"enr":{"allOf":[{"type":"string","description":"Ethereum node record. [Read more](https://eips.ethereum.org/EIPS/eip-778)","example":"enr:-IS4QHCYrYZbAKWCBRlAy5zzaDZXJBGkcnh4MHcBFZntXNFrdvJjX04jRzjzCBOonrkTfj499SZuOh8R33Ls8RRcy5wBgmlkgnY0gmlwhH8AAAGJc2VjcDI1NmsxoQPKY0yuDUmstAHYpMa2_oxVtw0RW_QAdpzBQA8yWM0xOIN1ZHCCdl8"},{"nullable":true}]},"last_seen_p2p_address":{"allOf":[{"type":"string","description":"[Read more](https://docs.libp2p.io/reference/glossary/#multiaddr)","example":"/ip4/7.7.7.7/tcp/4242/p2p/QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},{"description":"Multiaddrs used in last peer connection."}]},"state":{"type":"string","enum":["disconnected","connecting","connected","disconnecting"]},"direction":{"type":"string","enum":["inbound","outbound"]}}},"PeerId":{"type":"string","description":"Cryptographic hash of a peer’s public key. [Read more](https://docs.libp2p.io/concepts/peer-id/)","example":"QmYyQSo1c1Ym7orWxLYvCrM2EmxFTANf8wXmmE7DWjhx5N"},"PeerConnectionState":{"type":"string","enum":["disconnected","connecting","connected","disconnecting"]},"PeerConnectionDirection":{"type":"string","enum":["inbound","outbound"]},"GenesisTime":{"allOf":[{"type":"string","example":"1"},{"example":"1590832934"},{"description":"The genesis_time configured for the beacon node, which is the unix time in seconds at which the Eth2.0 chain began."}]},"Version":{"type":"string","description":"A string which uniquely identifies the client implementation and its version; similar to [HTTP User-Agent](https://tools.ietf.org/html/rfc7231#section-5.5.3).","example":"Lighthouse/v0.1.5 (Linux x86_64)"},"ForkVersion":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"DependentRoot":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The block root that this response is dependent on."}]},"ExecutionOptimistic":{"allOf":[{"type":"boolean"},{"example":false},{"description":"True if the response references an unverified execution payload. Optimistic information may be invalidated at a later time. If the field is not present, assume the False value."}]},"Root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"Hex":{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},"Graffiti":{"type":"string","format":"hex","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"Signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},"ErrorMessage":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"IndexedErrorMessage":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string","example":"some failures"},"failures":{"description":"List of individual items that have failed","type":"array","items":{"type":"object","properties":{"index":{"description":"Index of item in the request list that caused the error","type":"number","example":3},"message":{"description":"Message describing error","type":"string","example":"invalid signature"}}}}}},"Altair.SignedBeaconBlock":{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#signedbeaconblock) object envelope from the CL Altair spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"Altair.BeaconBlock":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblock) object from the CL Altair spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconblockbody) object from the CL Altair spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}}}]},"Altair.BeaconState":{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.3/specs/altair/beacon-chain.md#beaconstate) object from the CL Altair spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"current_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"inactivity_scores":{"description":"Per-validator inactivity scores. New in Altair","type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"current_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"next_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}}}},"Altair.SyncCommitteeSignature":{"type":"object","properties":{"slot":{"type":"string","example":"1"},"beacon_block_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"validator_index":{"type":"string","example":"1"},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"Altair.SyncCommitteeSubscription":{"type":"object","properties":{"validator_index":{"type":"string","example":"1"},"sync_committee_indices":{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},"until_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"The final epoch (exclusive value) that the specified validator requires the subscription for."}]}}},"Altair.ContributionAndProof":{"type":"object","properties":{"aggregator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"selection_proof":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},"contribution":{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator is providing a sync committee contribution."}]},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Block root for this contribution."}]},"subcommittee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The index of the subcommittee that the contribution pertains to."}]},"aggregation_bits":{"allOf":[{"description":"A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x01"}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Signature by the validator(s) over the block root of `slot`"}]}}}}},"Altair.SignedContributionAndProof":{"type":"object","properties":{"message":{"type":"object","properties":{"aggregator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"selection_proof":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},"contribution":{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator is providing a sync committee contribution."}]},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Block root for this contribution."}]},"subcommittee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The index of the subcommittee that the contribution pertains to."}]},"aggregation_bits":{"allOf":[{"description":"A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x01"}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Signature by the validator(s) over the block root of `slot`"}]}}}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"Altair.SyncCommitteeContribution":{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot at which the validator is providing a sync committee contribution."}]},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Block root for this contribution."}]},"subcommittee_index":{"allOf":[{"type":"string","example":"1"},{"description":"The index of the subcommittee that the contribution pertains to."}]},"aggregation_bits":{"allOf":[{"description":"A bit is set if a signature from the validator at the corresponding index in the subcommittee is present in the aggregate `signature`."},{"type":"string","pattern":"^0x[a-fA-F0-9]{2,}$"},{"example":"0x01"}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Signature by the validator(s) over the block root of `slot`"}]}}},"Altair.SyncCommittee":{"type":"object","properties":{"validators":{"allOf":[{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},{"description":"all of the validator indices in the current sync committee"}]},"validator_aggregates":{"type":"array","items":{"allOf":[{"type":"array","items":{"allOf":[{"type":"string","example":"1"}]}},{"description":"Subcommittee slices of the current sync committee"}]}}}},"ExecutionAddress":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"Bellatrix.BeaconState":{"type":"object","description":"The [`BeaconState`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconstate) object from the Eth2.0 Bellatrix spec.","properties":{"genesis_time":{"type":"string","example":"1"},"genesis_validators_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"slot":{"type":"string","example":"1"},"fork":{"type":"object","description":"The [`Fork`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#fork) object from the CL spec.","properties":{"previous_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"current_version":{"type":"string","description":"a fork version number","example":"0x00000000","pattern":"^0x[a-fA-F0-9]{8}$"},"epoch":{"type":"string","example":"1"}}},"latest_block_header":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"block_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"state_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":8192,"maxItems":8192},"historical_roots":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"maxItems":16777216},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"eth1_data_votes":{"type":"array","items":{"allOf":[{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}}]},"maxItems":1024},"eth1_deposit_index":{"type":"string","example":"1"},"validators":{"type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"object","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of withdrawal credentials"}]},"effective_balance":{"allOf":[{"type":"string","example":"1"},{"description":"Balance at stake in Gwei."}]},"slashed":{"type":"boolean","example":false,"description":"Was validator slashed (not longer active)."},"activation_eligibility_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When criteria for activation were met."}]},"activation_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator activated. 'FAR_FUTURE_EPOCH' if not activated"}]},"exit_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Epoch when validator exited. 'FAR_FUTURE_EPOCH' if not exited."}]},"withdrawable_epoch":{"allOf":[{"type":"string","example":"1"},{"description":"When validator can withdraw or transfer funds. 'FAR_FUTURE_EPOCH' if not defined"}]}}}]}},"balances":{"type":"array","description":"Validator balances in gwei","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"randao_mixes":{"type":"array","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":65536,"maxItems":65536},"slashings":{"type":"array","description":"Per-epoch sums of slashed effective balances","items":{"allOf":[{"type":"string","example":"1"}]},"minItems":8192,"maxItems":8192},"previous_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"current_epoch_participation":{"type":"array","items":{"allOf":[{"type":"string","description":"Unsigned 8 bit integer, max value 255","pattern":"^[1-2]?[0-9]{1,2}$","example":"0"}]},"maxItems":1099511627776},"justification_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Bit set for every recent justified epoch"},"previous_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"current_justified_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"finalized_checkpoint":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"inactivity_scores":{"description":"Per-validator inactivity scores. New in Altair","type":"array","maxItems":1099511627776,"items":{"allOf":[{"type":"string","example":"1"}]}},"current_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"next_sync_committee":{"type":"object","properties":{"pubkeys":{"type":"array","items":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}]},"minItems":512,"maxItems":512},"aggregate_pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"latest_execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}},"Bellatrix.BeaconBlock":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload":{"allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions":{"type":"array","items":{"allOf":[{"type":"string","description":"A transaction on the execution (Ethereum 1) network.","example":"0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86","pattern":"^0x[a-fA-F0-9]{0,2147483648}$"}]},"maxItems":1048576}}}]}}}]}}}]},"Bellatrix.SignedBeaconBlock":{"type":"object","description":"The [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec.","properties":{"message":{"description":"The [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload":{"allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions":{"type":"array","items":{"allOf":[{"type":"string","description":"A transaction on the execution (Ethereum 1) network.","example":"0x02f878831469668303f51d843b9ac9f9843b9aca0082520894c93269b73096998db66be0441e836d873535cb9c8894a19041886f000080c001a031cc29234036afbf9a1fb9476b463367cb1f957ac0b919b69bbc798436e604aaa018c4e9c3914eb27aadd0b91e10b18655739fcf8c1fc398763a9f1beecb8ddc86","pattern":"^0x[a-fA-F0-9]{0,2147483648}$"}]},"maxItems":1048576}}}]}}}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"Bellatrix.BlindedBeaconBlock":{"description":"A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"description":"A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.","allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}}]}}}]},"Bellatrix.SignedBlindedBeaconBlock":{"type":"object","description":"A variant of the the the [`SignedBeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#signedbeaconblock) object envelope from the CL Bellatrix spec, which contains a `BlindedBeaconBlock` rather than a `BeaconBlock`.","properties":{"message":{"description":"A variant of the the [`BeaconBlock`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblock) object from the CL Bellatrix spec, which contains a `BlindedBeaconBlockBody` rather than a `BeaconBlockBody`.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body":{"description":"A variant of the [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec, which contains a transactions root rather than a full transactions list.","allOf":[{"type":"object","description":"The [`BeaconBlockBody`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#beaconblockbody) object from the CL Bellatrix spec.","properties":{"randao_reveal":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The RanDAO reveal value provided by the validator."}]},"eth1_data":{"type":"object","description":"The [`Eth1Data`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#eth1data) object from the CL spec.","properties":{"deposit_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Root of the deposit tree."}]},"deposit_count":{"allOf":[{"type":"string","example":"1"},{"description":"Total number of deposits."}]},"block_hash":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"Ethereum 1.x block hash."}]}}},"graffiti":{"type":"string","pattern":"^0x[a-fA-F0-9]{64}$"},"proposer_slashings":{"type":"array","items":{"type":"object","description":"The [`ProposerSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#proposerslashing) object from the CL spec.","properties":{"signed_header_1":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"signed_header_2":{"type":"object","description":"The [`SignedBeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedbeaconblockheader) object envelope from the CL spec.","properties":{"message":{"description":"The [`BeaconBlockHeader`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#beaconblockheader) object from the CL spec.","allOf":[{"type":"object","properties":{"slot":{"allOf":[{"type":"string","example":"1"},{"description":"The slot to which this block corresponds."}]},"proposer_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of validator in validator registry."}]},"parent_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The signing merkle root of the parent `BeaconBlock`."}]},"state_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconState` for the `BeaconBlock`."}]}}},{"type":"object","properties":{"body_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The tree hash merkle root of the `BeaconBlockBody` for the `BeaconBlock`"}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}}},"attester_slashings":{"type":"array","items":{"type":"object","description":"The [`AttesterSlashing`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/core/0_beacon-chain.md#attesterslashing) object from the CL spec.","properties":{"attestation_1":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}},"attestation_2":{"type":"object","description":"The [`IndexedAttestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#indexedattestation) object from the CL spec.","properties":{"attesting_indices":{"type":"array","maxItems":2048,"description":"Attesting validator indices","items":{"type":"string","example":"1"}},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"The BLS signature of the `IndexedAttestation`, created by the validator of the attestation."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}}}},"attestations":{"type":"array","items":{"type":"object","description":"The [`Attestation`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestation) object from the CL spec.","properties":{"aggregation_bits":{"type":"string","example":"0x01","pattern":"^0x[a-fA-F0-9]+$","description":"Attester aggregation bits."},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"BLS aggregate signature."}]},"data":{"type":"object","description":"The [`AttestationData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#attestationdata) object from the CL spec.","properties":{"slot":{"type":"string","example":"1"},"index":{"type":"string","example":"1"},"beacon_block_root":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"LMD GHOST vote."}]},"source":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},"target":{"type":"object","description":"The [`Checkpoint`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#checkpoint","properties":{"epoch":{"type":"string","example":"1"},"root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}}}}}},"deposits":{"type":"array","items":{"type":"object","description":"The [`Deposit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#deposit) object from the CL spec.","properties":{"proof":{"type":"array","description":"Branch in the deposit tree.","items":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}]},"minItems":32,"maxItems":32},"data":{"type":"object","description":"The [`DepositData`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#depositdata) object from the CL spec.","properties":{"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"},"withdrawal_credentials":{"allOf":[{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},{"description":"The withdrawal credentials."}]},"amount":{"allOf":[{"type":"string","example":"1"},{"description":"Amount in Gwei."}]},"signature":{"allOf":[{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"},{"description":"Container self-signature."}]}}}}}},"voluntary_exits":{"type":"array","items":{"type":"object","description":"The [`SignedVoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#signedvoluntaryexit) object from the CL spec.","properties":{"message":{"type":"object","description":"The [`VoluntaryExit`](https://github.com/ethereum/consensus-specs/blob/v1.0.1/specs/phase0/beacon-chain.md#voluntaryexit) object from the CL spec.","properties":{"epoch":{"allOf":[{"type":"string","example":"1"},{"description":"Minimum epoch for processing exit."}]},"validator_index":{"allOf":[{"type":"string","example":"1"},{"description":"Index of the exiting validator."}]}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"sync_aggregate":{"type":"object","description":"The [`SyncAggregate`](https://github.com/ethereum/consensus-specs/blob/v1.1.0-alpha.1/specs/altair/beacon-chain.md#syncaggregate) object from the CL Altair spec.","properties":{"sync_committee_bits":{"type":"string","pattern":"^0x[a-fA-F0-9]+$","example":"0x01","description":"Aggregation bits of sync"},"sync_committee_signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}}},{"type":"object","properties":{"execution_payload_header":{"description":"The [`ExecutionPayloadHeader`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayloadheader) object from the CL Bellatrix spec.","allOf":[{"type":"object","description":"The [`ExecutionPayload`](https://github.com/ethereum/consensus-specs/blob/v1.1.9/specs/bellatrix/beacon-chain.md#executionpayload) object from the CL Bellatrix spec.","properties":{"parent_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"state_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"receipts_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"logs_bloom":{"type":"string","example":"0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","pattern":"^0x[a-fA-F0-9]{512}$"},"prev_randao":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"},"block_number":{"type":"string","example":"1"},"gas_limit":{"type":"string","example":"1"},"gas_used":{"type":"string","example":"1"},"timestamp":{"type":"string","example":"1"},"extra_data":{"type":"string","description":"Extra data on the execution (Ethereum 1) network.","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{0,64}$"},"base_fee_per_gas":{"type":"string","example":"1"},"block_hash":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}},{"type":"object","properties":{"transactions_root":{"type":"string","example":"0xcf8e0d4e9587369b2301d0790347320302cc0943d5a1884560367e8208d920f2","pattern":"^0x[a-fA-F0-9]{64}$"}}}]}}}]}}}]},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}},"ConsensusVersion":{"enum":["phase0","altair","bellatrix"],"example":"phase0"},"SignedValidatorRegistration":{"type":"object","description":"The `SignedValidatorRegistration` object from the Builder API specification.","properties":{"message":{"type":"object","description":"The `ValidatorRegistration` object from the Builder API specification.","properties":{"fee_recipient":{"type":"string","description":"An address on the execution (Ethereum 1) network.","example":"0xabcf8e0d4e9587369b2301d0790347320302cc09","pattern":"^0x[a-fA-F0-9]{40}$"},"gas_limit":{"type":"string","example":"1","description":"Preferred gas limit of validator."},"timestamp":{"type":"string","example":"1","description":"Unix timestamp of registration."},"pubkey":{"type":"string","pattern":"^0x[a-fA-F0-9]{96}$","description":"The validator's BLS public key, uniquely identifying them. _48-bytes, hex encoded with 0x prefix, case insensitive._","example":"0x93247f2209abcacf57b75a51dafae777f9dd38bc7053d1af526f220a7489a6d3a2753e5f3e8b1cfe39b56f43611df74a"}}},"signature":{"type":"string","pattern":"^0x[a-fA-F0-9]{192}$","example":"0x1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505cc411d61252fb6cb3fa0017b679f8bb2305b26a285fa2737f175668d0dff91cc1b66ac1fb663c9bc59509846d6ec05345bd908eda73e670af888da41af171505"}}}},"parameters":{"StateId":{"required":true,"name":"state_id","in":"path","example":"head","schema":{"type":"string"},"description":"State identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \"justified\", \\<slot\\>, \\<hex encoded stateRoot with 0x prefix\\>.\n"},"BlockId":{"required":true,"name":"block_id","in":"path","example":"head","schema":{"type":"string"},"description":"Block identifier.\nCan be one of: \"head\" (canonical head in node's view), \"genesis\", \"finalized\", \\<slot\\>, \\<hex encoded blockRoot with 0x prefix\\>.\n"}},"responses":{"InvalidRequest":{"description":"Invalid request syntax.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":400},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}}}}},"NotFound":{"description":"Not found","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":404,"message":"Requested item not found"}}}},"InternalError":{"description":"Beacon node internal error.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":500,"message":"Internal server error"}}}},"CurrentlySyncing":{"description":"Beacon node is currently syncing, try again later.","content":{"application/json":{"schema":{"type":"object","properties":{"code":{"description":"Either specific error code in case of invalid request or http status code","type":"number","example":404},"message":{"description":"Message describing error","type":"string"},"stacktraces":{"description":"Optional stacktraces, sent when node is in debug mode","type":"array","items":{"type":"string"}}}},"example":{"code":503,"message":"Beacon node is currently syncing and not serving request on that endpoint"}}}}},"headers":{"Eth-Consensus-Version":{"description":"Required in response so client can deserialize returned json or ssz data more effectively.","required":true,"schema":{"enum":["phase0","altair","bellatrix"],"example":"phase0"}}}}}