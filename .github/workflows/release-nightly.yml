name: Release nightly

# only one per github sha can be run
concurrency:
  group: cd-release-nightly

on:
  push:
    branches:
      - master

jobs:
  npm:
    name: Publish to NPM Registry
    runs-on: ubuntu-latest
    steps:
      # <common-build> - Uses YAML anchors in the future
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: "lts/gallium"
          registry-url: "https://registry.npmjs.org"
      - name: Node.js version
        id: node
        run: echo "::set-output name=v8CppApiVersion::$(node --print "process.versions.modules")"
      - name: Restore dependencies
        uses: actions/cache@master
        id: cache-deps
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-${{ steps.node.outputs.v8CppApiVersion }}-${{ hashFiles('**/yarn.lock', '**/package.json') }}
      - name: Install & build
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --ignore-optional && yarn build
      - name: Build
        run: yarn build
        if: steps.cache-deps.outputs.cache-hit == 'true'
      # </common-build>

      - name: Publish to npm registry
        # from-package: Base the latest nightly ref count from NPM registry
        # --no-git-reset: Do not delete code version artifacts so the next step can pick the version
        # --canary: Format version with commit (1.1.0-alpha.0+81e3b443)
        # --dist-tag next: Make this nightly version installable with `@next`
        # --preid dev: Tag version with `dev` instead of `alpha`
        # --force-publish: lerna doesn't want to publish anything otherwise - "lerna success No changed packages to publish"
        # NOTE: Using --preid dev.$(git rev-parse --short=7 HEAD) results in `0.24.3-dev.3ddb91d.0+3ddb91d`
        run: |
          node_modules/.bin/lerna publish --yes --no-verify-access \
          --canary --dist-tag next --no-git-reset --force-publish \
          --preid dev
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      - name: Get version
        id: version
        run: |
          VERSION=$(node -p "require('./packages/lodestar/package.json').version")
          echo VERSION $VERSION
          echo "::set-output name=version::$VERSION"
    outputs:
      version: ${{ steps.version.outputs.version }}

  docker:
    name: Publish to Docker Hub
    runs-on: ubuntu-latest
    needs: npm
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build --tag chainsafe/lodestar:next --build-arg VERSION=${{ needs.npm.outputs.version }} .
      - run: docker push chainsafe/lodestar:next
