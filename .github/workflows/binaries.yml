name: Build binaries

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  binaries:
    name: Build lodestar binaries
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            build: |
              npx caxa -D -p "yarn install --production" --input . --output "lodestar" -- "{{caxa}}/node_modules/.bin/node" "--max-old-space-size=4096" "{{caxa}}/node_modules/.bin/lodestar"
              tar -czf "dist/lodestar-linux-${{ inputs.version }}.tgz" "lodestar"
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v4
      - uses: "./.github/actions/setup-and-build"
        with:
          node: 20
      - run: |
          mkdir -p dist
          yarn global add caxa@3.0.1
          ${{ matrix.build }}
      - name: Upload binaries
        uses: actions/upload-artifact@v4
        with:
          name: binaries-${{ matrix.os }}
          path: dist/
          if-no-files-found: error
      - name: Sanity check binary
        uses: actions/github-script@v7
        with:
          script: |
            const exec = require('@actions/exec');
            exec.exec('lodestar');
            await exec.exec('wait 10');
            try {
              const targetVersion = '${{ inputs.version }}';
              const {data: {version} = {}} = await fetch('http://localhost:9596/eth/v1/node/version').then(resp => resp.json());
              if (data.version !== targetVersion) {
                core.setFailed(`Version mismatch: expected ${version.version} to be ${targetVersion}`);
              }
            } catch (e) {
              core.setFailed(`Error fetching version from lodestar binary ${e.toString()}`);
            }

  binary-arm64:
    name: Build Lodestar arm64 binary
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: yarn
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64
      - name: Build arm64 Binding, Run Tests and Copy Build Artifact to Host
        run: |
          docker buildx build --build-arg NODE_VERSION=20 --platform linux/arm64 -t lodestar-temp-armbuild:20 --load --progress=plain .
          docker create --name temp-container lodestar-temp-armbuild:20
          docker cp temp-container:/usr/app/node_modules ./node_modules
      - run: |
          mkdir -p dist
          yarn global add caxa@3.0.1
          npx caxa -D -p "yarn install --production" --input . --output "lodestar" -- "{{caxa}}/node_modules/.bin/node" "--max-old-space-size=4096" "{{caxa}}/node_modules/.bin/lodestar"
          tar -czf "dist/lodestar-linux-arm64-${{ inputs.version }}.tgz" "lodestar"
      - name: Upload binary
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-arm64
          path: dist/
          if-no-files-found: error
      - name: Sanity check binary
        uses: actions/github-script@v7
        with:
          script: |
            const exec = require('@actions/exec');
            exec.exec('lodestar');
            await exec.exec('wait 10');
            try {
              const targetVersion = '${{ inputs.version }}';
              const {data: {version} = {}} = await fetch('http://localhost:9596/eth/v1/node/version').then(resp => resp.json());
              if (data.version !== targetVersion) {
                core.setFailed(`Version mismatch: expected ${version.version} to be ${targetVersion}`);
              }
            } catch (e) {
              core.setFailed(`Error fetching version from lodestar binary ${e.toString()}`);
            }