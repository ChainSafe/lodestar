name: Release

on:
  push:
    branches:
      - "master"

jobs:
  tag:
    name: Check and Tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get latest tag
        uses: actions-ecosystem/action-get-latest-tag@v1
        with:
          with_initial_version: false
        id: get-latest-tag

      - name: Create tag
        id: tag
        uses: butlerlogic/action-autotag@1.1.2
        with:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          root: "packages/lodestar" # lerna doesn't update version root package.json and this action cannot read from lerna.json
          tag_prefix: "v"
    outputs:
      tag: ${{ steps.tag.outputs.tagname }}
      previous_tag: ${{ steps.get-latest-tag.outputs.tag }}
      version: ${{ steps.tag.outputs.version }}

  release:
    name: Publish
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.outputs.tag != ''
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Nodejs
        uses: actions/setup-node@v1
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"

      - name: Restore dependencies
        uses: actions/cache@master
        id: cache-deps
        with:
          path: |
            node_modules
            packages/*/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}-ignore-optional

      - name: Install & build
        if: steps.cache-deps.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile --ignore-optional

      - name: Build
        if: steps.cache-deps.outputs.cache-hit == 'true'
        run: yarn run build

      - name: Generate changelog
        id: changelog
        uses: heinrichreimer/github-changelog-generator-action@v2.2
        with:
          token: ${{ secrets.GH_PAGES_TOKEN }}
          issues: "false"
          pullRequests: "true"
          prWoLabels: "true"
          author: "true"
          usernamesAsGithubLogins: "true"
          compareLink: "true"
          filterByMilestone: "false"
          unreleased: "false"
          sinceTag: "${{ needs.tag.outputs.previous_tag }}"
          maxIssues: "0"
          stripGeneratorNotice: "true"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.outputs.tag }}
          body_path: "CHANGELOG.md"
          release_name: Release ${{ needs.tag.outputs.tag }}
          prerelease: false # Note: if prerelease, will be hidden from view in the main page

      - name: Publish to npm registry
        run: yarn run publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      #in case of failure
      - name: Rollback on failure
        if: failure()
        uses: author/action-rollback@9ec72a6af74774e00343c6de3e946b0901c23013
        with:
          id: ${{ steps.create_release.outputs.id }}
          tag: ${{ needs.tag.outputs.tag }}
          delete_orphan_tag: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.outputs.tag != ''
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - run: docker build --tag chainsafe/lodestar:${{ needs.tag.outputs.tag }} .
      - run: docker push chainsafe/lodestar:${{ needs.tag.outputs.tag }}
